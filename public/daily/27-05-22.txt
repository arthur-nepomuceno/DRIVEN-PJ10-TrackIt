27/05/22 - Sexta-feira.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
INÍCIO: 17:00

QQQ - TELA DE HÁBITOS
01. Criar layout básico. -OK

02. Apresentar tela de criação de hábito ao clicar em "+". -OK
    -criar o layout -ok
    -condicionar a renderização do layout ao clique no "+" -ok
        -estabelecer uma variável de controle -ok
        -se ela for "false", nada de tela de criação -ok
        -se ela for "true", a tela aparece -ok
        -ao clicar no botão, mudo o valor de "false" para "true" -ok
        -ao clicar em "Cancelar" ou "Salvar", mudo o valor de "true" para "false" -ok

03. Criar função básica de seleção de dia.
    -mudar a cor do dia conforme seleção/desseleção

PAUSA AQUI - 19:47
TOTAL - 2:47
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RETORNO - 22:32
CONTINUANDO...

QQQ
03. Criar função básica de seleção de dia. -OK
    -mudar a cor do dia conforme seleção/desseleção
    
    Ideia 1: colocar uma chave "selected" com valor "false" dentro de cada dia da lista
    e mudar esse valor para "true" conforma seleção. Condicionar as características do
    botão ao valor dessa chave.
        - Não deu certo. A função não fez nada.

    Ideia 2: Criar um componente Day.js, passar para ele os parâmetro necessários
    e operar a lógica de seleção dentro dele.
        - Deu certo.

PAUSA AQUI - 23:36
TOTAL - 1:04
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RETORNO - 00:03
QQQ
04. Carregar hábitos do usuário. -OK
    - importar o axios -ok
    - importar o useEffect -ok
    - escrever a promise com o link da API e o objeto de envio -ok
        - montar objeto de envio -ok
        - aqui vou precisar do token
            - pegar o token pelo useContext -ok
            - montar o "config" com o token -ok
    - se o pedido der certo, receber a lista de hábitos do usuário -ok
    - se der errado, mostrar o erro na tela -ok
    - criar o layout do hábito carregado -ok
    - enviar um hábito com sucesso
        -criar variável de estado pegar o que for digitado no input -ok
        -criar variável de estado tipo lista par armazenar os dias selecionados -ok
            -passar essa variável para a função de seleção
            -realizar a atualização da variável mediante seleçao e desseleção -ok
                -SPREAD OPERATOR para ADICIONAR -ok
                -LISTA.FILTER para REMOVER, pegando SÓ OS DIFERENTES -ok
        -agora que consigo armazenar o nome e os dias do hábito, posso enviar!

PROGRESSO:
Consigo salvar hábitos do usuário
Consigo mostrar esses hábitos na tela

PROBLEMA:
Fazer os hábitos recarregarem automaticamente depois de salvar
Se cancelar, também persistir os dados dos dias escolhidos

PAUSA AQUI - 02:38
TOTAL - 2:35
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TOTAL DO DIA - 6:26